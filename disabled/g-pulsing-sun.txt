Here is a simple animation that looks like a pulsing sun:

    var radius = 100;

    function setup() {
      g.size(300,400);
      g.frameRate(15);
    }

    function draw() {
      g.background(140,200,255);
      g.fill(240, 220, 0);
      g.stroke(255);
      g.strokeWeight(3);
      
      radius += 2 * Math.sin(g.frameCount/10);
      g.ellipse(g.width/2, g.height/2, radius, radius );
    }

The magic that makes it pulse is the line:

      radius += 2 * Math.sin(g.frameCount/10);

This changes the radius on each frame by some amount based on the sin wave of the current frame number. Try playing with different numbers to see what happens.

We can make the sun follow our mouse:

    // global variables
    var radius = 50.0;
    var delay = 16;
    var X, Y;
    var mouseX, mouseY;

    // called once
    function setup() {
      g.size(300,400);
      g.frameRate(15);

      X = g.width / 2;
      Y = g.height / 2;
      mouseX = X;
      mouseY = Y;
    }

    // called for each frame
    function draw() {
      g.background(140,200,255);
      g.fill(240, 220, 0);
      g.stroke(255);
      g.strokeWeight(3);
      
      radius += Math.sin(g.frameCount/4);
      
      // track circle to new destination
      X += (mouseX - X) / delay;
      Y += (mouseY - Y) / delay; 

      g.ellipse(X, Y, radius, radius);
    }

    // this is called whenever the mouse moves
    function mouseMoved() {
       mouseX = g.mouseX;
       mouseY = g.mouseY;
    }

For a fun effect, try removing the call to `g.background(140,200,255);` and putting it in `setup()` instead.

With a few more slight modifications, we can create something really different:

    // global variables
    var radius = 50;
    var delay = 16;
    var X, Y;
    var mouseX, mouseY;

    // called once
    function setup() {
      g.size(300,400);
      g.frameRate(15);
      g.background(0);
      
      X = g.width / 2;
      Y = g.height / 2;
      mouseX = X;
      mouseY = Y;
    }

    // called for each frame
    function draw() {
      var color = g.color(X, Y, g.random(255));
      g.fill(color);
      g.stroke(255);
      g.strokeWeight(1);
      
      radius += 2 * Math.sin(g.frameCount/10);
      
      // track circle to new destination
      X += (mouseX - X) / delay;
      Y += (mouseY - Y) / delay; 

      g.ellipse(X, Y, radius, radius);
    }

    // this is called whenever the mouse moves
    function mouseMoved() {
       mouseX = g.mouseX;
       mouseY = g.mouseY;
    }

Can you spot all the changes? Try removing the `g.stroke()` and `g.strokeWeight()` function calls, and replace them with `g.noStroke()`.

